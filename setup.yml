---
- hosts: localhost
  become: yes

  vars:
    repo_dir: "{{ playbook_dir }}/openwrt"
    vagrant_plugins_file: "{{lookup('file', '~/.vagrant.d/plugins.json') }}"
    vagrant_plugin: vagrant-lxc
    packages:
    - lxc
    - vagrant
    - vagrant-lxc

  environment:
    PATH: "{{ ansible_env.PATH }}"

  tasks:
    - name: Clone turris os repo from Gitlab
      git:
        repo: https://gitlab.labs.nic.cz/turris/openwrt.git
        dest: "{{ repo_dir}}"

    - name: Ensure that vagrant and lxc are installed
      apt:
        name: "{{ packages }}"

    - name: Install lxc vagrant plugin
      command: vagrant plugin install vagrant-lxc
      when:
        - vagrant_plugins_file['installed'] | json_query("[?installed==vagrant_plugin]")

    - name: Link Vagrantfile to playbook dir
      file:
        state: link
        src: "{{ repo_dir }}/vagrant/Vagrantfile"
        dest: "{{ playbook_dir }}/Vagrantfile"

    - name: Copy vagrant_provision.sh to playbook directory
      copy:
        src: "{{ repo_dir }}/vagrant/vagrant_provision.sh"
        dest: "{{ playbook_dir }}/vagrant/vagrant_provision.sh"

    - name: Setup lxc network
      block:
      - name: Add USE_LXC_BRIDGE="true" to /etc/default/lxc-net
        lineinfile:
          path: /etc/default/lxc-net
          line: USE_LXC_BRIDGE="true"
          create: yes

      - name: Edit /etc/lxc/default.conf
        lineinfile:
          path: /etc/lxc/default.conf
          line: "lxc.network.type = empty"
          state: absent

      - name: Edit /etc/lxc/default.conf
        blockinfile:
          path: /etc/lxc/default.conf
          insertbefore: BOF
          marker: ""
          block: |
            lxc.network.type = veth
            lxc.network.link = lxcbr0
            lxc.network.flags = up
            lxc.network.hwaddr = "{{ hostvars[inventory_hostname].ansible_default_ipv4.macaddress }}"

      - name: Restart lxc-net
        systemd:
          name: lxc-net
          state: restarted

    - name: Start instance of turris omnia dev environment
      shell: "vagrant up --provider=lxc"
      args:
        chdir: "{{ playbook_dir }}"
      register: async_results
      async: 45
      poll: 0

    - name: Check if the instance is up
      async_status:
        jid: "{{ async_results.ansible_job_id }}"
      register: async_poll_results
      until: async_poll_results.finished
      retries: 30
      ignore_errors: yes

    - debug:
        var: async_poll_results
